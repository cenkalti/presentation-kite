Kite
Micro-service framework in Go
Tags: kite, micro-service, framework, go, golang

Cenk AltÄ±
koding.com
http://cenkalti.net
@cilginkorsancek

http://github.com/cenkalti/presentation-kite

* What is micro-service framework?

- RPC (Remote Procedure Call)
- Service discovery
- Authentication and authorization

* koding.com

Koding is a cloud-based development environment complete with free VMs, IDE & sudo enabled terminal where you can learn Ruby, Go, Java, NodeJS, PHP, C, ...

.image koding.png _ 700

* RPC (Remote Procedure Call)

- Bi-directional
- Async
- Uses dnode protocol (JSON-RPC with function callbacks)
- Has session support via SockJS
- Reconnection support

* RPC example

Server:

.play first.go

* RPC example

Client:

.play second.go

* Kontrol

- Provides service discovery methods to kites
- Kite itself
- Every kite registers itself to Kontrol by calling Register() function
- Kontrol registers the kite under path like this:
    /<username>/<environment>/<name>/<version>/<region>/<hostname>/<id>
- Other kites can query this kite with the same path or part of the path

* Kontrol (initial setup)

    # generate rsa key
    openssl genrsa -out kontrol_key_private.pem 2048
    openssl rsa -pubout -in kontrol_key_private.pem -out kontrol_key_public.pem

.code kontrol_env

    # generate kite.key file
    kontrol -initial
    cat ~/.kite/kite.key
    kitectl showkey

    # run it
    etcd &
    kontrol

* Kontrol example

Client:

.play first_kontrol.go /func main/,

* Kontrol example

Server:

.play second_kontrol.go /func main/,

